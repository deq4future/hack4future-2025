# -*- coding: utf-8 -*-
"""Codemon.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PGr-6ZmEYNmOV_sUz4-1mucd3TFQ2hw8
"""

import os
import random
import requests
import time
import sys

# Configuraci√≥ inicial
respuesta = requests.get("https://fun.codelearn.cat/hackathon/game/new")
print(respuesta.status_code)
dades = respuesta.json()

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

player_art = r"""
   \O/
    |
   / \
 Tu (Heroi)
"""

# Monstres amb art ASCII millorat
monster_ascii = {
    "Marrameu": r"""
    |\___/|
   (= o_o =)
   (")___(")
 Marrameu
""",
    "Pyrosaur": r"""
    /^ ^\
   / 0 0 \
   V\ Y /V
    / - \
   |    |
   || (__)
 Pyrosaur
""",
    "Bugzilla": r"""
    .-'      '-.
   /            \
  |    O   O    |
   \.--. .--./
   (    Y    )
    \__^__/
  Bugzilla
""",
    "Stacktoise": r"""
   _____     ____
  /     \~~~/    \\
 (  o  o ) ( o o  )
  \__^__/   \_^__/
  /     \___/     \\
 |               |
 |__|_|_|___|_|__|
Stacktoise
""",
    "Nullphant": r"""
     _.-- ,.--.
   .'   .'     /
   | @       |'..--------._
  /      \._/              '.
 /  .-.-                     \
(  /    \                     \\
 \\      '.                  | #
  \\       \   -.           /
   :\       |    )._____.'   \
    "       |   /  \  |  \    )
            |   |./'  :__ \.-'
            '--'
Nullphant
""",
    "Indentarion": r"""
     ,     ,
    (\____/)
     (_oo_)
     (O  O)
    /   \/\
   (__/\__)
   | |  | |
  /_/|__|_\
 Indentarion
""",
    "Dracorix": r"""
      /^\/^\
    _|__|  O|
\/     /~  \
 \____|__________/  \
        \_______      \
                `\     \                 \
                  |     |                  \
                 /      /                    \
                /     /                       \
              /      /                         \ \
             /     /                            \  \
           /     /             _----_            \   \
          /     /           _-~      ~-_         |   |
         (      (        _-~    _--_    ~-_     _/   |
          \      ~-____-~    _-~    ~-_    ~-_-~    /
            ~-_           _-~          ~-_       _-~
               ~--______-~                ~-___-~
Dracorix
""",
    "Toxicorn": r"""
      .     .
       \___/
      (o o)
      / V \
     /(   )\
     ^^   ^^
  Toxicorn
""",
    "Cryptodon": r"""
     .-=-.
    /  !  \
   |      |
   |  .-. |
   |  | | |
   |  '-' |
    \     /
     `---`
 Cryptodon
""",
    "Voltigon": r"""
     \     /
      \   /
       \_/
       |=|
      __|__
     /     \
    |  ‚ö°  |
     \___/
 Voltigon
""",
    "Octopulse": r"""
   _____
  /     \
 | () () |
  \  ^  /
   |||||
   |||||
 Octopulse
""",
    "JavaDog": r"""
    |\_/|
  | @ @   Buf!
  |   <>
  |  _/\
  | |  |
 JavaDog
""",
    "CookieHamster": r"""
      (\_/)
    ( ‚Ä¢_‚Ä¢)
   / >üç™
 CookieHamster
""",
    "HDCat": r"""
        ,_     _
    |\\_,-~/
    / _  _ |    ,--.
   (  @  @ )   / ,-'
    \  _T_/-._( (
    /         `. \
   |         _  \ |
    \ \ ,  /      |
     || |-_\__   /
    ((_/`(____,-'
 HDCat
""",
    "CCSD": r"""
       .-----.
  / .===. \
  \/ 6 6 \/
  ( \_=_/ )
   ^^---^^
 CCSD
"""
}

# Jefes especials
bosses = {
    "Megadrac": {
        "HP": 500,
        "LVL": 10,
        "ATTACK": 35,
        "art": r"""
        / \    / \
       /   \  /   \
      /     \/     \
     /             \
    /      /\      \
   /      /  \      \
  /      /    \      \
 /      /      \      \
/______/        \______\
|                     |
|                     |
|        MEGADRAC     |
|_____________________|
"""
    },
    "Cibertroll": {
        "HP": 450,
        "LVL": 15,
        "ATTACK": 40,
        "art": r"""
      .-""-.
     / .--. \
    / /    \ \
   | |      | |
   | |.----.| |
    \  o   o  /
     '------'
    / _-""-._ \
   /  / __ \  \
  |   |'  '|   |
  |   | || |   |
  |   | || |   |
  '---' '' '---'
  CIBERTROLL
"""
    }
}

# Preguntes per categoria (30 per categoria)
categorias_preguntas = {
    "1": {
        "nom": "Programaci√≥",
        "preguntes": [
            {"pregunta": "Quin llenguatge de programaci√≥ √©s conegut per la seva sintaxi clara i s'usa molt en IA?",
             "opcions": ["Python", "Java", "C++"], "resposta": "Python"},
            {"pregunta": "Qu√® significa 'HTML'?",
             "opcions": ["HyperText Markup Language", "HighText Machine Language", "Hyperlink and Text Markup Language"], "resposta": "HyperText Markup Language"},
            {"pregunta": "Per a qu√® s'utilitza principalment SQL?",
             "opcions": ["Gesti√≥ de bases de dades", "Disseny web", "Aplicacions m√≤bils"], "resposta": "Gesti√≥ de bases de dades"},
            {"pregunta": "Quina estructura de dades funciona amb el principi FIFO?",
             "opcions": ["Pila (Stack)", "Cua (Queue)", "Arbre (Tree)"], "resposta": "Cua (Queue)"},
            {"pregunta": "Quina √©s la funci√≥ principal d'un compilador?",
             "opcions": ["Executar codi directament", "Convertir codi font a codi m√†quina", "Depurar errors"], "resposta": "Convertir codi font a codi m√†quina"},
            {"pregunta": "Qu√® √©s un bucle 'for'?",
             "opcions": ["Una estructura condicional", "Una estructura repetitiva", "Una funci√≥"], "resposta": "Una estructura repetitiva"},
            {"pregunta": "Quin llenguatge s'utilitza sovint per programar aplicacions web del costat del client?",
             "opcions": ["JavaScript", "Python", "C#"], "resposta": "JavaScript"},
            {"pregunta": "Quin √©s el resultat de 'print(2 ** 3)' en Python?",
             "opcions": ["6", "8", "9"], "resposta": "8"},
            {"pregunta": "Quin concepte de programaci√≥ permet executar diferents blocs de codi depenent d'una condici√≥?",
             "opcions": ["Bucle", "Condicional", "Funci√≥"], "resposta": "Condicional"},
            {"pregunta": "Qu√® √©s un 'array' en programaci√≥?",
             "opcions": ["Una funci√≥", "Una col¬∑lecci√≥ ordenada d'elements", "Un tipus de variable"], "resposta": "Una col¬∑lecci√≥ ordenada d'elements"},
            {"pregunta": "Qu√® √©s la recursi√≥ en programaci√≥?",
             "opcions": ["Una funci√≥ que es crida a si mateixa", "Un error de codi", "Un tipus de variable"], "resposta": "Una funci√≥ que es crida a si mateixa"},
            {"pregunta": "Qu√® √©s un 'bug' en programaci√≥?",
             "opcions": ["Un error en el codi", "Una funci√≥ especial", "Una llibreria externa"], "resposta": "Un error en el codi"},
            {"pregunta": "Qu√® significa API?",
             "opcions": ["Application Programming Interface", "Applied Program Integration", "Advanced Programming Interaction"], "resposta": "Application Programming Interface"},
            {"pregunta": "Qu√® √©s un IDE?",
             "opcions": ["Integrated Development Environment", "Internal Data Engine", "Interactive Design Editor"], "resposta": "Integrated Development Environment"},
            {"pregunta": "Quin llenguatge de programaci√≥ √©s fam√≥s pel seu √∫s en desenvolupament d'apps iOS?",
             "opcions": ["Swift", "Kotlin", "Ruby"], "resposta": "Swift"},
            {"pregunta": "Qu√® significa CSS?",
             "opcions": ["Cascading Style Sheets", "Computer Style System", "Creative Style Syntax"], "resposta": "Cascading Style Sheets"},
            {"pregunta": "Qu√® √©s una variable?",
             "opcions": ["Un contenidor per emmagatzemar dades", "Un tipus de dada espec√≠fic", "Una funci√≥ especial"], "resposta": "Un contenidor per emmagatzemar dades"},
            {"pregunta": "Qu√® √©s Git?",
             "opcions": ["Un sistema de control de versions", "Un llenguatge de programaci√≥", "Un editor de codi"], "resposta": "Un sistema de control de versions"},
            {"pregunta": "Qu√® √©s la programaci√≥ orientada a objectes?",
             "opcions": ["Un paradigma basat en objectes i classes", "Una t√®cnica de depuraci√≥", "Una llibreria est√†ndard"], "resposta": "Un paradigma basat en objectes i classes"},
            {"pregunta": "Qu√® √©s una funci√≥ en programaci√≥?",
             "opcions": ["Un bloc de codi que realitza una tasca", "Una variable especial", "Un error com√∫"], "resposta": "Un bloc de codi que realitza una tasca"},
            {"pregunta": "Qu√® √©s un loop infinit?",
             "opcions": ["Un bucle que mai acaba", "Un bucle que s'executa una vegada", "Un error de sintaxi"], "resposta": "Un bucle que mai acaba"},
            {"pregunta": "Quin d'aquests √©s un llenguatge de tipat est√†tic?",
             "opcions": ["Python", "JavaScript", "Java"], "resposta": "Java"},
            {"pregunta": "Qu√® fa l'operador '%' en la majoria de llenguatges de programaci√≥?",
             "opcions": ["Divisi√≥", "M√≤dul (residu)", "Multiplicaci√≥"], "resposta": "M√≤dul (residu)"},
            {"pregunta": "Qu√® √©s un framework en programaci√≥?",
             "opcions": ["Un entorn de treball predefinit", "Un tipus de biblioteca", "Un llenguatge de programaci√≥"], "resposta": "Un entorn de treball predefinit"},
            {"pregunta": "Quin d'aquests serveix per gestionar depend√®ncies en Python?",
             "opcions": ["npm", "pip", "gradle"], "resposta": "pip"},
            {"pregunta": "Qu√® √©s Docker?",
             "opcions": ["Un sistema de contenidors", "Un llenguatge de programaci√≥", "Un sistema operatiu"], "resposta": "Un sistema de contenidors"},
            {"pregunta": "Quina empresa va desenvolupar el llenguatge Go?",
             "opcions": ["Google", "Microsoft", "Facebook"], "resposta": "Google"},
            {"pregunta": "Qu√® √©s la programaci√≥ funcional?",
             "opcions": ["Un paradigma basat en funcions matem√†tiques", "Programaci√≥ amb funcions", "Programaci√≥ orientada a objectes"], "resposta": "Un paradigma basat en funcions matem√†tiques"},
            {"pregunta": "Qu√® √©s un punt d'interrupci√≥ (breakpoint)?",
             "opcions": ["Un error en el codi", "Un lloc on s'atura l'execuci√≥ per depurar", "Un tipus de variable"], "resposta": "Un lloc on s'atura l'execuci√≥ per depurar"}
        ]
    },
    "2": {
        "nom": "Matem√†tiques",
        "preguntes": [
            {"pregunta": "Quin √©s el resultat de 7 x 8?", "opcions": ["54", "56", "64"], "resposta": "56"},
            {"pregunta": "Quina f√≥rmula s'utilitza per calcular l'√†rea d'un cercle?",
             "opcions": ["œÄr¬≤", "2œÄr", "œÄd"], "resposta": "œÄr¬≤"},
            {"pregunta": "Quin √©s un nombre primer?", "opcions": ["15", "17", "21"], "resposta": "17"},
            {"pregunta": "Quina √©s la derivada de f(x) = x¬≤?",
             "opcions": ["2x", "x", "x¬≥"], "resposta": "2x"},
            {"pregunta": "Quin √©s el valor aproximat de œÄ a dos decimals?",
             "opcions": ["3.14", "3.41", "3.04"], "resposta": "3.14"},
            {"pregunta": "Quant sumen els angles interiors d'un triangle?",
             "opcions": ["180 graus", "360 graus", "90 graus"], "resposta": "180 graus"},
            {"pregunta": "Quina √©s la f√≥rmula per calcular la mitjana aritm√®tica?",
             "opcions": ["Suma de valors / nombre de valors", "Producte de valors / nombre de valors", "Valor m√†xim - valor m√≠nim"], "resposta": "Suma de valors / nombre de valors"},
            {"pregunta": "Quin √©s el nombre e?",
             "opcions": ["2.71", "3.14", "1.62"], "resposta": "2.71"},
            {"pregunta": "Com es diu una l√≠nia que toca un cercle en un sol punt?",
             "opcions": ["Secant", "Tangent", "Di√†metre"], "resposta": "Tangent"},
            {"pregunta": "Quin √©s el resultat de 123 + 456?", "opcions": ["579", "569", "589"], "resposta": "579"},
            {"pregunta": "Qu√® √©s un nombre racional?",
             "opcions": ["Un nombre que pot expressar-se com a fracci√≥", "Un nombre amb infinits decimals no peri√≤dics", "Un nombre irracional"], "resposta": "Un nombre que pot expressar-se com a fracci√≥"},
            {"pregunta": "Quina √©s l'arrel quadrada de 64?",
             "opcions": ["6", "8", "16"], "resposta": "8"},
            {"pregunta": "Qu√® √©s un pol√≠gon regular?",
             "opcions": ["Un pol√≠gon amb tots els seus costats i angles iguals", "Un pol√≠gon amb costats diferents", "Un pol√≠gon amb 4 costats"], "resposta": "Un pol√≠gon amb tots els seus costats i angles iguals"},
            {"pregunta": "Qu√® √©s un angle obt√∫s?",
             "opcions": ["Un angle major de 90 graus", "Un angle menor de 90 graus", "Un angle de 90 graus"], "resposta": "Un angle major de 90 graus"},
            {"pregunta": "Qu√® √©s una funci√≥ lineal?",
             "opcions": ["Una funci√≥ de la forma f(x) = mx + b", "Una funci√≥ amb par√†bola", "Una funci√≥ constant"], "resposta": "Una funci√≥ de la forma f(x) = mx + b"},
            {"pregunta": "Qu√® √©s el teorema de Pit√†gores?",
             "opcions": ["a¬≤ + b¬≤ = c¬≤", "a + b = c", "a x b = c"], "resposta": "a¬≤ + b¬≤ = c¬≤"},
            {"pregunta": "Quin √©s el m√†xim com√∫ divisor (MCD)?",
             "opcions": ["El nombre m√©s gran que divideix a dos nombres", "El nombre m√©s petit que divideix a dos nombres", "El producte de dos nombres"], "resposta": "El nombre m√©s gran que divideix a dos nombres"},
            {"pregunta": "Qu√® √©s un nombre irracional?",
             "opcions": ["Un nombre que no pot expressar-se com a fracci√≥", "Un nombre que pot expressar-se com a fracci√≥", "Un nombre enter"], "resposta": "Un nombre que no pot expressar-se com a fracci√≥"},
            {"pregunta": "Qu√® representa el pendent en una gr√†fica lineal?",
             "opcions": ["La taxa de canvi", "La intersecci√≥", "El domini"], "resposta": "La taxa de canvi"},
            {"pregunta": "Qu√® √©s un angle recte?",
             "opcions": ["Un angle de 90 graus", "Un angle menor de 90 graus", "Un angle major de 90 graus"], "resposta": "Un angle de 90 graus"},
            {"pregunta": "Quin √©s el resultat de 5! (factorial de 5)?",
             "opcions": ["120", "25", "60"], "resposta": "120"},
            {"pregunta": "Qu√® √©s una matriu identitat?",
             "opcions": ["Una matriu quadrada amb 1 a la diagonal i 0 als altres", "Una matriu amb tots els elements iguals", "Una matriu amb una sola fila"], "resposta": "Una matriu quadrada amb 1 a la diagonal i 0 als altres"},
            {"pregunta": "Quin √©s el valor de sin(90 graus)?",
             "opcions": ["0", "0.5", "1"], "resposta": "1"},
            {"pregunta": "Qu√® √©s una progressi√≥ aritm√®tica?",
             "opcions": ["Una seq√º√®ncia on cada terme s'obt√© sumant una constant", "Una seq√º√®ncia on cada terme √©s el producte del precedent", "Una seq√º√®ncia de nombres primers"], "resposta": "Una seq√º√®ncia on cada terme s'obt√© sumant una constant"},
            {"pregunta": "Quin √©s el m√≠nim com√∫ m√∫ltiple de 4 i 6?",
             "opcions": ["12", "24", "6"], "resposta": "12"},
            {"pregunta": "Quina √©s la soluci√≥ de x¬≤ - 5x + 6 = 0?",
             "opcions": ["x=2 i x=3", "x=1 i x=6", "x=-2 i x=-3"], "resposta": "x=2 i x=3"},
            {"pregunta": "Qu√® √©s un nombre complex?",
             "opcions": ["Un nombre amb part real i part imagin√†ria", "Un nombre amb decimals", "Un nombre enter gran"], "resposta": "Un nombre amb part real i part imagin√†ria"},
            {"pregunta": "Quin √©s el resultat de ‚à´(2x dx)?",
             "opcions": ["x¬≤ + C", "2x¬≤ + C", "x + C"], "resposta": "x¬≤ + C"},
            {"pregunta": "Qu√® √©s una hipotenusa?",
             "opcions": ["El costat m√©s llarg d'un triangle rectangle", "Un angle de 180 graus", "La suma dels angles d'un triangle"], "resposta": "El costat m√©s llarg d'un triangle rectangle"}
        ]
    },
    "3": {
        "nom": "Cultura General",
        "preguntes": [
            {"pregunta": "Quina √©s la capital d'Espanya?", "opcions": ["Barcelona", "Madrid", "Sevilla"], "resposta": "Madrid"},
            {"pregunta": "Qui va escriure 'Don Quixot'?", "opcions": ["Miguel de Cervantes", "Gabriel Garc√≠a M√°rquez", "Pablo Neruda"], "resposta": "Miguel de Cervantes"},
            {"pregunta": "Quin √©s l'idioma oficial del Brasil?", "opcions": ["Espanyol", "Portugu√®s", "Franc√®s"], "resposta": "Portugu√®s"},
            {"pregunta": "Quin √©s el riu m√©s llarg del m√≥n?", "opcions": ["Nil", "Amazones", "Iang-Ts√©"], "resposta": "Amazones"},
            {"pregunta": "Qui va ser el primer home a trepitjar la Lluna?", "opcions": ["Neil Armstrong", "Buzz Aldrin", "Iuri Gagarin"], "resposta": "Neil Armstrong"},
            {"pregunta": "En quin any va comen√ßar la Segona Guerra Mundial?", "opcions": ["1939", "1914", "1945"], "resposta": "1939"},
            {"pregunta": "Quin pa√≠s t√© una bandera amb una estrella blanca sobre fons vermell?", "opcions": ["Turquia", "Xina", "Vietnam"], "resposta": "Turquia"},
            {"pregunta": "Quin √©s l'element qu√≠mic amb s√≠mbol 'O'?", "opcions": ["Or", "Oxigen", "Osmi"], "resposta": "Oxigen"},
            {"pregunta": "Qui va pintar la Mona Lisa?", "opcions": ["Leonardo da Vinci", "Pablo Picasso", "Vincent van Gogh"], "resposta": "Leonardo da Vinci"},
            {"pregunta": "Quin √©s el planeta m√©s gran del sistema solar?", "opcions": ["J√∫piter", "Saturn", "Nept√∫"], "resposta": "J√∫piter"},
            {"pregunta": "Quina obra liter√†ria √©s famosa per la frase 'Ser o no ser'?",
             "opcions": ["Hamlet", "Macbeth", "Otelo"], "resposta": "Hamlet"},
            {"pregunta": "Quina √©s la muntanya m√©s alta del m√≥n?",
             "opcions": ["K2", "Everest", "Kangchenjunga"], "resposta": "Everest"},
            {"pregunta": "Qui va ser el l√≠der del moviment d'independ√®ncia de l'√çndia?",
             "opcions": ["Mahatma Gandhi", "Nelson Mandela", "Sim√≥n Bol√≠var"], "resposta": "Mahatma Gandhi"},
            {"pregunta": "Quin √©s l'idioma m√©s parlat del m√≥n per nombre de parlants nadius?",
             "opcions": ["Angl√®s", "Mandar√≠", "Espanyol"], "resposta": "Mandar√≠"},
            {"pregunta": "Qu√® va inventar Alexander Graham Bell?",
             "opcions": ["Tel√®fon", "R√†dio", "Televisi√≥"], "resposta": "Tel√®fon"},
            {"pregunta": "Quina √©s la capital d'Austr√†lia?",
             "opcions": ["Sydney", "Melbourne", "Canberra"], "resposta": "Canberra"},
            {"pregunta": "En quin continent es troba Egipte?",
             "opcions": ["√Äsia", "√Äfrica", "Europa"], "resposta": "√Äfrica"},
            {"pregunta": "Quin √©s el s√≠mbol qu√≠mic de l'or?",
             "opcions": ["Au", "Ag", "O"], "resposta": "Au"},
            {"pregunta": "Qui va ser el primer president dels Estats Units?",
             "opcions": ["Abraham Lincoln", "George Washington", "Thomas Jefferson"], "resposta": "George Washington"},
            {"pregunta": "Quin √©s l'idioma oficial de l'Argentina?",
             "opcions": ["Portugu√®s", "Espanyol", "Itali√†"], "resposta": "Espanyol"},
            {"pregunta": "Quin any va caure el mur de Berl√≠n?",
             "opcions": ["1989", "1991", "1975"], "resposta": "1989"},
            {"pregunta": "Qui va escriure 'Cent anys de solitud'?",
             "opcions": ["Gabriel Garc√≠a M√°rquez", "Pablo Neruda", "Jorge Luis Borges"], "resposta": "Gabriel Garc√≠a M√°rquez"},
            {"pregunta": "Quina √©s la moneda oficial del Jap√≥?",
             "opcions": ["Yuan", "Won", "Ien"], "resposta": "Ien"},
            {"pregunta": "Quin √©s l'oc√©√† m√©s gran del m√≥n?",
             "opcions": ["Atl√†ntic", "√çndic", "Pac√≠fic"], "resposta": "Pac√≠fic"},
            {"pregunta": "Quin pintor va tallar-se una orella?",
             "opcions": ["Pablo Picasso", "Vincent van Gogh", "Salvador Dal√≠"], "resposta": "Vincent van Gogh"},
            {"pregunta": "Qui va descobrir Am√®rica?",
             "opcions": ["Crist√≤for Colom", "Vasco de Gama", "Fernando de Magallanes"], "resposta": "Crist√≤for Colom"},
            {"pregunta": "Quin √©s el pa√≠s m√©s gran del m√≥n per superf√≠cie?",
             "opcions": ["Canad√†", "Xina", "R√∫ssia"], "resposta": "R√∫ssia"},
            {"pregunta": "Quina √©s la capital de Canad√†?",
             "opcions": ["Toronto", "Montreal", "Ottawa"], "resposta": "Ottawa"},
            {"pregunta": "Qui va escriure 'Romeu i Julieta'?",
             "opcions": ["William Shakespeare", "Charles Dickens", "Jane Austen"], "resposta": "William Shakespeare"},
            {"pregunta": "Quin √©s l'element m√©s abundant a l'atmosfera terrestre?",
             "opcions": ["Oxigen", "Hidrogen", "Nitrogen"], "resposta": "Nitrogen"}
        ]
    },
    "4": {
        "nom": "Videojocs",
        "preguntes": [
            {"pregunta": "Quin videojoc √©s conegut pel seu personatge principal anomenat Mario?", "opcions": ["Sonic", "Mario Bros", "Pac-Man"], "resposta": "Mario Bros"},
            {"pregunta": "Quin joc va popularitzar el mode 'Battle Royale'?", "opcions": ["Minecraft", "Fortnite", "Among Us"], "resposta": "Fortnite"},
            {"pregunta": "Quin videojoc √©s fam√≥s per construir amb blocs?", "opcions": ["Tetris", "Minecraft", "Roblox"], "resposta": "Minecraft"},
            {"pregunta": "Quin estudi va crear 'The Legend of Zelda'?", "opcions": ["Nintendo", "Sony", "Microsoft"], "resposta": "Nintendo"},
            {"pregunta": "Quin √©s el videojoc m√©s venut de tots els temps?", "opcions": ["Minecraft", "GTA V", "Tetris"], "resposta": "Minecraft"},
            {"pregunta": "Quin videojoc t√© un mode anomenat 'Creative'?", "opcions": ["Minecraft", "Fortnite", "Roblox"], "resposta": "Minecraft"},
            {"pregunta": "En quin videojoc apareix el personatge 'Master Chief'?", "opcions": ["Halo", "Call of Duty", "Overwatch"], "resposta": "Halo"},
            {"pregunta": "Quin joc √©s conegut per la frase 'The cake is a lie'?", "opcions": ["Portal", "Half-Life", "Bioshock"], "resposta": "Portal"},
            {"pregunta": "Quin joc √©s un MOBA popular?", "opcions": ["League of Legends", "Fortnite", "Minecraft"], "resposta": "League of Legends"},
            {"pregunta": "Quin joc est√† ambientat a l'univers de Westeros?", "opcions": ["The Witcher", "Game of Thrones RPG", "Skyrim"], "resposta": "Game of Thrones RPG"},
            {"pregunta": "Quin videojoc presenta una illa anomenada 'Koholint'?", "opcions": ["The Legend of Zelda: Link's Awakening", "Mario Kart", "Final Fantasy"], "resposta": "The Legend of Zelda: Link's Awakening"},
            {"pregunta": "Qui √©s l'antagonista principal a 'Resident Evil'?", "opcions": ["Albert Wesker", "Chris Redfield", "Leon Kennedy"], "resposta": "Albert Wesker"},
            {"pregunta": "Quin √©s el nom del joc on construeixes i sobrevius en un m√≥n pixelat?", "opcions": ["Terraria", "Minecraft", "Roblox"], "resposta": "Minecraft"},
            {"pregunta": "Quin joc utilitza un sistema de cartes anomenat 'Gwent'?", "opcions": ["The Witcher 3", "Hearthstone", "Magic: The Gathering"], "resposta": "The Witcher 3"},
            {"pregunta": "Quin joc √©s fam√≥s per la seva dificultat i el seu mode 'Dark Souls'?", "opcions": ["Bloodborne", "Dark Souls", "Sekiro"], "resposta": "Dark Souls"},
            {"pregunta": "Quin √©s el nom del mode multijugador de 'Call of Duty' m√©s popular?", "opcions": ["Zombies", "Battle Royale", "Multijugador est√†ndard"], "resposta": "Multijugador est√†ndard"},
            {"pregunta": "Quina consola va desenvolupar Sony?", "opcions": ["PlayStation", "Xbox", "Nintendo Switch"], "resposta": "PlayStation"},
            {"pregunta": "Quin √©s el nom del protagonista a 'Halo'?", "opcions": ["Master Chief", "Marcus Fenix", "Solid Snake"], "resposta": "Master Chief"},
            {"pregunta": "Quin joc t√© personatges anomenats 'Champions'?", "opcions": ["League of Legends", "Overwatch", "Dota 2"], "resposta": "League of Legends"},
            {"pregunta": "Quin videojoc va ser creat per Mojang?", "opcions": ["Minecraft", "Fortnite", "Terraria"], "resposta": "Minecraft"},
            {"pregunta": "Quin √©s el joc m√©s venut de la franqu√≠cia Pok√©mon?",
             "opcions": ["Pok√©mon GO", "Pok√©mon Roig/Blau", "Pok√©mon Diamant/Perla"], "resposta": "Pok√©mon Roig/Blau"},
            {"pregunta": "Quina √©s la consola m√©s venuda de la hist√≤ria?",
             "opcions": ["PlayStation 2", "Nintendo DS", "PlayStation 4"], "resposta": "PlayStation 2"},
            {"pregunta": "Quin personatge √©s la mascota de Sega?",
             "opcions": ["Sonic", "Mario", "Crash Bandicoot"], "resposta": "Sonic"},
            {"pregunta": "En quin any es va llan√ßar el primer Grand Theft Auto (GTA)?",
             "opcions": ["1997", "2001", "2004"], "resposta": "1997"},
            {"pregunta": "Quin joc va introduir el sistema de batalla per torns?",
             "opcions": ["Final Fantasy", "Dragon Quest", "Chrono Trigger"], "resposta": "Dragon Quest"},
            {"pregunta": "Quina empresa va crear el joc Fortnite?",
             "opcions": ["EA", "Epic Games", "Ubisoft"], "resposta": "Epic Games"},
            {"pregunta": "Quin √©s el nom del m√≥n obert de la s√®rie The Legend of Zelda: Breath of the Wild?",
             "opcions": ["Hyrule", "Termina", "Skyloft"], "resposta": "Hyrule"},
            {"pregunta": "Quina √©s l'arma caracter√≠stica de Doomguy?",
             "opcions": ["BFG 9000", "Llan√ßacoets", "Escopeta"], "resposta": "BFG 9000"},
            {"pregunta": "Quin joc t√© el lema 'Gotta Catch 'Em All'?",
             "opcions": ["Digimon", "Pok√©mon", "Yu-Gi-Oh!"], "resposta": "Pok√©mon"}
        ]
    }
}

# Variables globals
preguntes_seleccionades = []
score = 0
highscore = 0
dificultat_multiplier = 1
TIME_LIMIT = 30

class Player:
    def __init__(self, nom, HP, LVL, ATTACK, defensa=0, potions=3, atac_especial=0):
        self.nom = nom
        self.HP = HP
        self.LVL = LVL
        self.ATTACK = ATTACK
        self.defensa = defensa
        self.potions = potions
        self.atac_especial = atac_especial

class Monster:
    def __init__(self, nom, HP, LVL, ATTACK, art, tipus="normal", debilitat=None):
        self.nom = nom
        self.HP = HP
        self.LVL = LVL
        self.ATTACK = ATTACK
        self.art = art
        self.tipus = tipus
        self.debilitat = debilitat

def barra_estat():
    print("\nüßë‚Äçüíª Estat del jugador:")
    print("‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó")
    print(f"‚ïë ‚ù§Ô∏è  Vida: {player.HP:<16}‚ïë")
    print(f"‚ïë ‚öîÔ∏è  Atac: {player.ATTACK:<15}‚ïë")
    print(f"‚ïë üõ°Ô∏è  Defensa: {player.defensa:<12}‚ïë")
    print(f"‚ïë üìà Nivell: {player.LVL:<14}‚ïë")
    print(f"‚ïë üß™ Poci√≥: {player.potions:<15}‚ïë")
    print("‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù")

def imprimir_titol():
    print(r"""
 _________            .___
 \_   ___ \  ____   __| _/____   _____   ____   ____
 /    \  \/ /  _ \ / __ |/ __ \ /     \ /  _ \ /    \
 \     \___(  <_> ) /_/ \  ___/|  Y Y  (  <_> )   |  \
  \______  /\____/\____ |\___  >__|_|  /\____/|___|  /
         \/            \/    \/      \/            \/
 ________          _____              __      __  .__                            .__  .__ ._._.
 \______ \   _____/ ____\____ _____ _/  |_  _/  |_|  |__   ____   _____   _____  |  | |  || | |
  |    |  \_/ __ \   __\/ __ \\__  \\   __\ \   __\  |  \_/ __ \ /     \  \__  \ |  | |  || | |
  |    `   \  ___/|  | \  ___/ / __ \|  |    |  | |   Y  \  ___/|  Y Y  \  / __ \|  |_|  |_\|\|
 /_______  /\___  >__|  \___  >____  /__|    |__| |___|  /\___  >__|_|  / (____  /____/____/___
         \/     \/          \/     \/                  \/     \/      \/       \/          \/\/
               ‚öîÔ∏è  BENVINGUT A CODEMON ‚öîÔ∏è
""")

def seleccionar_categoria():
    global preguntes_seleccionades
    clear_screen()
    imprimir_titol()
    print("\nSelecciona una categoria de preguntes:")
    for clau, categoria in categorias_preguntas.items():
        print(f"{clau}. {categoria['nom']}")

    while True:
        opcio = input("\nTria una categoria (1-4): ")
        if opcio in categorias_preguntas:
            preguntes_seleccionades = categorias_preguntas[opcio]["preguntes"]
            print(f"\nHas seleccionat: {categorias_preguntas[opcio]['nom']}")
            input("\nPrem ENTER per continuar...")
            return
        else:
            print("Opci√≥ no v√†lida. Si us plau, tria una categoria del 1 al 4.")

def seleccionar_dificultat():
    global dificultat_multiplier
    clear_screen()
    imprimir_titol()
    print("\nSelecciona la dificultat:")
    print("1. F√†cil (x0.8 dany enemic)")
    print("2. Normal (x1.0 dany enemic)")
    print("3. Dif√≠cil (x1.5 dany enemic)")
    print("4. √àpic (x2.0 dany enemic)")

    while True:
        opcio = input("\nTria una dificultat (1-4): ")
        if opcio == "1":
            dificultat_multiplier = 0.8
            print("\nDificultat F√ÄCIL seleccionada!")
            break
        elif opcio == "2":
            dificultat_multiplier = 1.0
            print("\nDificultat NORMAL seleccionada!")
            break
        elif opcio == "3":
            dificultat_multiplier = 1.5
            print("\nDificultat DIF√çCIL seleccionada!")
            break
        elif opcio == "4":
            dificultat_multiplier = 2.0
            print("\nDificultat √àPIC seleccionada!")
            break
        else:
            print("Opci√≥ no v√†lida.")

    input("\nPrem ENTER per continuar...")

def mostrar_menu_principal():
    while True:
        clear_screen()
        imprimir_titol()
        print("\nMEN√ö PRINCIPAL")
        print("1. Nova Partida")
        print("2. Puntuacions")
        print("3. Sortir")

        opcio = input("\nTria una opci√≥: ")

        if opcio == "1":
            return True
        elif opcio == "2":
            mostrar_puntuacions()
        elif opcio == "3":
            print("\nFins aviat, heroi!")
            sys.exit()
        else:
            print("Opci√≥ no v√†lida. Torna a intentar.")
            input("Prem ENTER per continuar...")

def mostrar_puntuacions():
    clear_screen()
    print("üèÜ MILLORS PUNTUACIONS üèÜ")
    # Aix√≤ podria llegir d'un fitxer en una versi√≥ m√©s avan√ßada
    print("\n1. Guifr√© - 1200 punts")
    print("2. Laia - 950 punts")
    print("3. Oriol - 780 punts")
    print("4. Marta - 650 punts")
    print("5. Marc - 520 punts")
    input("\nPrem ENTER per tornar al men√∫...")

items = {
    "1": {"nom": "Poci√≥ de vida (+30 HP)", "cost": 50, "efecte": lambda jugador: setattr(jugador, 'HP', jugador.HP + 30)},
    "2": {"nom": "Espasa afilada (+5 ATK)", "cost": 75, "efecte": lambda jugador: setattr(jugador, 'ATTACK', jugador.ATTACK + 5)},
    "3": {"nom": "Armadura resistent (+20 DEF)", "cost": 100, "efecte": lambda jugador: setattr(jugador, 'defensa', jugador.defensa + 20)},
    "4": {"nom": "Poci√≥ d'atac especial (1 √∫s)", "cost": 150, "efecte": lambda jugador: setattr(jugador, 'atac_especial', jugador.atac_especial + 1)}
}

def botiga():
    global score
    clear_screen()
    print("üè™ BOTIGA DEL HEROI")
    print(f"Tens {score} punts per gastar\n")
    for clau, item in items.items():
        print(f"{clau}. {item['nom']} - {item['cost']} punts")

    print("0. Tornar al joc")

    while True:
        tria = input("\nTria un objecte per comprar o 0 per sortir: ")
        if tria == "0":
            break
        if tria in items:
            item = items[tria]
            if score >= item["cost"]:
                score -= item["cost"]
                item["efecte"](player)
                print(f"Has comprat {item['nom']}!")
            else:
                print("No tens punts suficients!")
        else:
            print("Opci√≥ no v√†lida!")

        input("Prem ENTER per continuar a la botiga...")
        clear_screen()
        print("üè™ BOTIGA DEL HEROI")
        print(f"Tens {score} punts per gastar\n")
        for clau, item in items.items():
            print(f"{clau}. {item['nom']} - {item['cost']} punts")
        print("0. Tornar al joc")

def generar_monstre(nivell):
    # Si el nivell √©s m√∫ltiple de 5, surt un cap
    if nivell % 5 == 0:
        nom_boss = random.choice(list(bosses.keys()))
        boss = bosses[nom_boss]
        return Monster(nom_boss, boss["HP"], boss["LVL"], boss["ATTACK"], boss["art"], "cap")

    # Monstre normal
    nom = random.choice(list(monster_ascii.keys()))
    base_HP = random.randint(20, 30) + nivell * 5
    base_ATK = random.randint(5, 10) + nivell * 2
    base_LVL = nivell
    art = monster_ascii[nom]
    HP = int(base_HP * dificultat_multiplier)
    ATTACK = int(base_ATK * dificultat_multiplier)

    # Assignar tipus i debilitats
    tipus = random.choice(["foc", "aigua", "planta", "llamp"])
    debilitat = {"foc": "aigua", "aigua": "planta", "planta": "foc", "llamp": "terra"}.get(tipus, None)

    return Monster(nom, HP, base_LVL, ATTACK, art, tipus, debilitat)

def atac():
    global player, monster1, score

    # Seleccionar pregunta aleat√≤ria
    pregunta = random.choice(preguntes_seleccionades)

    clear_screen()
    print(f"{player_art}      {monster1.art}")
    barra_estat()

    # Mostrar tipus del monstre
    if monster1.tipus != "normal":
        print(f"\n‚ö†Ô∏è  Tipus del monstre: {monster1.tipus.upper()}")
        if monster1.debilitat:
            print(f"üí¢ Debilitat: {monster1.debilitat.upper()}")

    print(f"\nüî• {pregunta['pregunta']}")
    for idx, opcio in enumerate(pregunta["opcions"], 1):
        print(f"{idx}. {opcio}")

    print("\n‚è≥ Temps l√≠mit: " + str(TIME_LIMIT) + " segons")
    print("\nACCIONS DE COMBAT:")
    print("1. Atac b√†sic (100% encert, dany normal)")
    print("2. Atac fort (75% d'encert, 1.5x dany)")
    print("3. Defensa (redueix dany al proper atac)")
    print("4. Utilitzar poci√≥ (+30 HP)")

    if player.atac_especial > 0:
        print(f"5. Atac especial (2.5x dany) - Disponibles: {player.atac_especial}")

    accio = None
    while True:
        try:
            accio = input("\nTria una acci√≥ (1-5): ")
            if accio == "4" and player.potions <= 0:
                print("No tens poci√≥!")
                continue
            if accio == "5" and player.atac_especial <= 0:
                print("No tens atacs especials!")
                continue
            if accio not in ["1", "2", "3", "4", "5"]:
                raise ValueError
            break
        except ValueError:
            print("Opci√≥ no v√†lida, torna a intentar.")

    # Utilitzar poci√≥
    if accio == "4":
        player.HP += 30
        player.potions -= 1
        print(f"\nüß™ Has utilitzat una poci√≥! Vida actual: {player.HP}")
        input("\nPrem ENTER per continuar...")
        return

    defensa_activa = False
    start_time = time.time()

    try:
        resposta_usuari = input(f"\nRespon la pregunta: ")
        elapsed = time.time() - start_time
        if elapsed > TIME_LIMIT:
            raise TimeoutError
        resposta_usuari = int(resposta_usuari)
    except (ValueError, TimeoutError):
        print("\n‚ùå Temps exhaurit o resposta incorrecta! El monstre ataca!")
        dany = dany_monstre(monster1)
        player.HP -= max(0, dany - player.defensa)
        if player.HP < 0:
            player.HP = 0
        print(f"Vida restant del jugador: {player.HP}")
        input("\nPrem ENTER per continuar...")
        return

    correcte = (1 <= resposta_usuari <= len(pregunta["opcions"]) and \
               pregunta["opcions"][resposta_usuari - 1] == pregunta["resposta"])

    if accio == "3":  # Defensa
        defensa_activa = True
        print("\nüõ°Ô∏è Defensa activada! El proper atac del monstre far√† menys dany.")
        dany = dany_monstre(monster1) // 2
        player.HP -= max(0, dany - player.defensa)
        if player.HP < 0:
            player.HP = 0
        print(f"\nEl monstre ataca amb dany redu√Øt! Vida restant: {player.HP}")
        input("\nPrem ENTER per continuar...")
        return

    if not correcte:
        print("\n‚ùå Incorrecte! El monstre ataca!")
        dany = dany_monstre(monster1)
        dany_final = max(0, dany - player.defensa)
        player.HP -= dany_final
        if player.HP < 0:
            player.HP = 0
        print(f"Dany rebut: {dany_final} | Vida restant: {player.HP}")
    else:
        multiplicador_dany = 1.0

        # Determinar multiplicador segons l'acci√≥
        if accio == "2":  # Atac fort
            if random.random() <= 0.75:
                multiplicador_dany = 1.5
            else:
                print("\n‚ùå Atac fort fallat! El monstre ataca!")
                dany = dany_monstre(monster1)
                dany_final = max(0, dany - player.defensa)
                player.HP -= dany_final
                if player.HP < 0:
                    player.HP = 0
                print(f"Dany rebut: {dany_final} | Vida restant: {player.HP}")
                input("\nPrem ENTER per continuar...")
                return

        elif accio == "5":  # Atac especial
            multiplicador_dany = 2.5
            player.atac_especial -= 1
            print("\nüí• ATAC ESPECIAL ACTIVAT!")

        # C√†lcul del dany
        dany = dany_jugador(player) * multiplicador_dany

        # Cr√≠tic aleatori (10% de probabilitat)
        if random.random() < 0.1:
            dany *= 1.8
            print("\nüí• COP CR√çTIC! üí•")

        # Aplicar dany
        monster1.HP -= dany
        print(f"\n‚úÖ Correcte! Fas {int(dany)} de dany al monstre!")

        # Comprovaci√≥ de debilitat
        if monster1.debilitat and accio == "5":
            print(f"üí¢ L'atac especial explota la debilitat del monstre!")
            monster1.HP -= dany * 0.5

    if monster1.HP < 0:
        monster1.HP = 0
    print(f"Vida restant del monstre: {monster1.HP}")

    input("\nPrem ENTER per continuar...")

def dany_monstre(monstre):
    # Dany del monstre amb variaci√≥ aleat√≤ria i possibilitat d'esquivar
    if random.random() < 0.15:  # 15% d'oportunitat d'esquivar
        print("üéØ Has esquivat l'atac del monstre!")
        return 0

    return random.randint(monstre.ATTACK - 5, monstre.ATTACK + 5)

def dany_jugador(jugador):
    # Dany del jugador amb variaci√≥ aleat√≤ria
    return random.randint(jugador.ATTACK - 3, jugador.ATTACK + 5)

def monstre_mort():
    global score, player
    clear_screen()
    print(f"\nüíÄ El monstre {monster1.nom} ha estat derrotat!")

    # Recompenses
    punts_base = 25 * monster1.LVL
    punts_extra = 0

    # Recompensa per tipus de monstre
    if monster1.tipus == "cap":
        punts_extra = 200
        print("üèÜ HAS DERROTAT UN CAP! +200 PUNTS EXTRA!")
    elif monster1.tipus != "normal":
        punts_extra = random.randint(20, 50)
        print(f"‚ú® Bonificaci√≥ per tipus especial! +{punts_extra} punts")

    punts_total = punts_base + punts_extra
    score += punts_total

    # Recompenses aleat√≤ries
    if random.random() < 0.3:  # 30% d'oportunitat
        player.potions += 1
        print("üß™ Has guanyat una poci√≥ extra!")

    if random.random() < 0.1:  # 10% d'oportunitat
        player.atac_especial += 1
        print("‚ö° Has guanyat un atac especial!")

    print(f"Puntuaci√≥ actual: {score}")
    input("\nPrem ENTER per continuar...")
    botiga()

def jugador_mort():
    global highscore, score
    clear_screen()
    print("\n‚ò†Ô∏è HAS MORT!")

    # Enviar puntuaci√≥ (en un entorn real)
    dades2 = {"game_id": dades["game_id"], "data": dades, "score": score}
    try:
        requests.post("https://fun.codelearn.cat/hackathon/game/finalize", json=dades2)
    except:
        pass

    if score > highscore:
        highscore = score
        print("üéâ NOU R√àCORD PERSONAL!")
    print(f"üèÜ La teva millor puntuaci√≥: {highscore}")
    print(f"üìä Puntuaci√≥ d'aquesta partida: {score}")
    score = 0
    input("\nPrem ENTER per tornar al men√∫ principal...")

def combat():
    global monster1, player

    while player.HP > 0 and monster1.HP > 0:
        clear_screen()
        print(f"{player_art}      {monster1.art}")
        barra_estat()
        print(f"\nüí• {player.nom} vs {monster1.nom} - Nivell {monster1.LVL}")

        atac()

    if monster1.HP <= 0:
        monstre_mort()
        # Pujar de nivell i generar nou monstre
        player.LVL += 1
        player.HP = min(100 + player.LVL * 10, 300)  # Vida m√†xima 300
        player.ATTACK = 10 + player.LVL * 3
        monster1 = generar_monstre(player.LVL)
        return "continuar"

    if player.HP <= 0:
        jugador_mort()
        return "mort"

def nova_partida():
    global player, monster1, score
    seleccionar_categoria()
    seleccionar_dificultat()

    score = 0
    nom_jugador = input("Introdueix el teu nom, heroi: ")
    player = Player(nom_jugador, 100, 1, 15, defensa=10, potions=3, atac_especial=0)
    monster1 = generar_monstre(player.LVL)
    clear_screen()
    imprimir_titol()
    input("Prem ENTER per comen√ßar la batalla!")

    estat = "continuar"
    while estat == "continuar":
        estat = combat()

    if estat == "mort":
        return

# Programa principal
if __name__ == "__main__":
    while True:
        if mostrar_menu_principal():
            nova_partida()

